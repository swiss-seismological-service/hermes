name: publish

on:
    push:
        tags:
            - 'v*.*.*'

env:
    REGISTRY: ghcr.io
    IMAGE_NAME: ${{ github.repository }}

jobs:
    tests:
        uses: ./.github/workflows/_tests.yml
        with:
            python-versions: '["3.12", "3.13"]'

    docker-image:
        runs-on: ubuntu-latest
        name: Build and push Docker image
        needs:
            - tests
        # Sets the permissions granted to the `GITHUB_TOKEN` for the actions in this job.
        permissions:
            contents: read
            packages: write
            attestations: write
            id-token: write
        steps:
            - name: Checkout repository
              uses: actions/checkout@v4
            - name: Log in to the Container registry
              uses: docker/login-action@v3
              with:
                  registry: ${{ env.REGISTRY }}
                  username: ${{ github.actor }}
                  password: ${{ secrets.GITHUB_TOKEN }}
            # Extract tags and labels that will be applied to the specified image. The `images` value provides the base name for the tags and labels.
            - name: Extract metadata (tags, labels) for Docker
              id: meta
              uses: docker/metadata-action@v5
              with:
                  images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
            - name: Build and push Docker image
              id: push
              uses: docker/build-push-action@v6
              with:
                  context: .
                  push: true
                  tags: ${{ steps.meta.outputs.tags }}
                  labels: ${{ steps.meta.outputs.labels }}
            - name: Generate artifact attestation
              uses: actions/attest-build-provenance@v2
              with:
                  subject-name: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME}}
                  subject-digest: ${{ steps.push.outputs.digest }}
                  push-to-registry: true

    build:
        name: Build distribution
        needs:
            - docker-image
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v4
              with:
                  persist-credentials: false
                  fetch-depth: 250
                  fetch-tags: true
                  ref: ${{ github.ref }}
            - name: Get latest tag
              id: get-tag
              run: |
                  TAG=$(git describe --tags --exact-match HEAD 2>/dev/null || echo "")
                  echo "TAG=$TAG" >> $GITHUB_ENV
                  echo "Found tag: $TAG"
            - name: Set up Python
              uses: actions/setup-python@v5
              with:
                  python-version: '3.x'
            - name: Install pypa/build
              run: >-
                  python3 -m
                  pip install
                  build setuptools-scm
                  --user
            - name: Build a binary wheel and a source tarball
              run: python3 -m build
            - name: Store the distribution packages
              uses: actions/upload-artifact@v4
              with:
                  name: python-package-distributions
                  path: dist/

    publish-to-pypi:
        name: >-
            Publish to PyPI
        needs:
            - build
        runs-on: ubuntu-latest
        environment:
            name: pypi
            url: https://pypi.org/p/rt-hermes
        permissions:
            id-token: write

        steps:
            - name: Download all the dists
              uses: actions/download-artifact@v4
              with:
                  name: python-package-distributions
                  path: dist/
            - name: Publish distribution ðŸ“¦ to PyPI
              uses: pypa/gh-action-pypi-publish@release/v1

    github-release:
        name: >-
            Create Release
        needs:
            - build
        runs-on: ubuntu-latest

        permissions:
            contents: write
            id-token: write

        steps:
            - name: Download all the dists
              uses: actions/download-artifact@v4
              with:
                  name: python-package-distributions
                  path: dist/
            - name: Sign the dists with Sigstore
              uses: sigstore/gh-action-sigstore-python@v3.0.0
              with:
                  inputs: >-
                      ./dist/*.tar.gz
                      ./dist/*.whl
            - name: Create GitHub Release
              env:
                  GITHUB_TOKEN: ${{ github.token }}
              run: >-
                  gh release create
                  "$GITHUB_REF_NAME"
                  --repo "$GITHUB_REPOSITORY"
                  --notes ""
            - name: Upload artifact signatures to GitHub Release
              env:
                  GITHUB_TOKEN: ${{ github.token }}
              run: >-
                  gh release upload
                  "$GITHUB_REF_NAME" dist/**
                  --repo "$GITHUB_REPOSITORY"
